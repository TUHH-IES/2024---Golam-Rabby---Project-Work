variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

default:
  image: "docker.io/python"

ruff:
  before_script:
    - pip install hatch hatch-mkdocs
  script:
    - hatch fmt --check

types:
  before_script:
    - pip install hatch
    - pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
  script:
    - hatch run types:check

test:
  coverage: "/(?i)total.*? (100(?:\\.0+)?\\%|[1-9]?\\d(?:\\.\\d+)?\\%)$/"
  before_script:
    - pip install hatch
    - pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
  script:
    - hatch run tests:report-xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

examples:
  parallel:
    matrix:
      - EXAMPLE: ["boiler", "failure_time_prediction", "linear_data"]
  retry: 1
  before_script:
    - pip install hatch
    - pip install dvc dvc-webdav
    - pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
    - dvc remote modify --local tuhh-cloud password "${TUHH_CLOUD_SECRET}"
    - dvc pull --recursive examples/$EXAMPLE
  script:
    - hatch run examples:$EXAMPLE

pages:
  tags:
    - tuhh-registry
  before_script:
    - pip install hatch
  script:
    - hatch run docs:build
  artifacts:
    paths:
      - site

deploy-pages:
  tags:
    - tuhh-registry
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${SSH_KNOWN_HOSTS}" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
  script:
    - scp -rP 40043 ./site/* rhlkekke@prod-docker-goldmoon.rz.tuhh.de:/home/rhlkekke/html
  needs: ["pages"]
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

.container-build:
  image: quay.io/buildah/stable:latest
  variables:
    STORAGE_DRIVER: vfs
    FQ_IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CONTAINER_IMAGE_NAME"
  before_script:
    - buildah info
    - buildah login --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - buildah build --pull --tag "${FQ_IMAGE_NAME}:latest" --file ${CONTAINER_FILE} ${CONTAINER_CONTEXT}
    - buildah push "${FQ_IMAGE_NAME}:latest"

build-and-deploy-java:
  extends: .container-build
  variables:
    CONTAINER_IMAGE_NAME: "java-automata-learner"
    CONTAINER_FILE: java/AutomataLearner/Containerfile
    CONTAINER_CONTEXT: java/AutomataLearner
  when: manual
